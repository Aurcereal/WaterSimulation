https://matthias-research.github.io/pages/publications/sca03.pdf
https://sph-tutorial.physics-simulation.org/pdf/SPH_Tutorial.pdf
http://www.ligum.umontreal.ca/Clavet-2005-PVFS/pvfs.pdf

gridsize = h/sqrt(2)

write about optimizations to run in realtime

Seb Lague Vid

- For Wave Crest we need easy access to normals i guess i can precompute it foreach... even though it'd be kinda expensive?
	- Well it can be toggleable
	- Do it all in one loop is nice multiple loops make things worse, can really calculate new normal in the same loop im using the prev normals

- Maybe group water particle into struct with position and velocity
- Group density and neardensity as a float2 (less reads and writes)
- Probably just take out masses for now?
- Implement linked list method for springs (detailed below)
- People in Seb Lague video comments talking about how full bitonic sort doesn't gotta be run every frame, odd even sort? like swapping odd and even entries maybe and just doing that every frame but how can iteratively sorting work when the whole hash system is reset every frame?  though it shouldnt have to be reset since only a few entries change every frame prolly 
	- count sort type of thing?
	- Index pointers from particle index to its current index in the particle key pair array

- Foam on Screenspace and Foam on Raymarch (can't refract into foam inside water tho)
- Shadow
- Caustics (nvidia article scroll up)
- God rays

- 3D Object Repeller/Attractor objects or can use raycasting to transfer mouse force to 3D
- Sticky magnet with springs, different types of liquids like ketchup or goop could be cool visuals

- Extreme viscosity so like a fluid box will stay together (very very strong springs?)
- Can turn a arb mesh into fluid so it'd be kinda like soft body sim lol

- eventually could make like a water slide or something with sdfs
- tinted glass could also be really nice, prolly wouldn't be hard since it's just perfect reflect and perfect transmit.. like prolly is extremely similar to water actually mabe with different base reflectance

- Flip fluid implementation mode? downloaded paper on it

- Have presets to choose what type of fluid you want with presets affecting material and sim
- Preset situations with SDF objects to play with (water slide stuff, fountain with artificial force and stuff would be really cool)
- Could eventually move to SDY and have water interact with SDF objects there

-=Ignore/Done for now=-

- Collisions with sdf objects considering velocities from one of those papers? idk not that important mabe
	- Simple way would just be adding the velocity of the object with a multiplier, maybe make wrt density.. prolly should make bounce off velocity like that too anyways

- Try using golf and unsafe versions of smoothing kernels/gradients
- Surface Tension from one of those papers (didn't turn out well for now..)
- Springs are a big nxn matrix currently, that can get massive so can cut down to an 'adjacency list' which will just be stored as like an nx200 matrix where row i stores particles that are within smoothing distance of particle i (since it won't be much).  Can store length for each row.
- Elasticity from ligum paper section 5 (implemented)
- Sim Parameters has 'Initialization' header section with particle count, spawn zone... etc... and whether to use springs (so we can avoid creating big buffer sometimes)
- Rectangle w/ Arb transform Collision (or just sdfs lol)
- Try SDF stickiness (Clavet 6.2 maybe can ignore fact that my collision resolution is very simpler just add sticky force)

-=-=-=-

Different buttons linking to different parts of same page
Emphasize compute shader stuff and graphics programming related stuff, optimizations and realtime gpu utilization stufff