#pragma kernel SortPass

struct ParticleEntry {
    int particleIndex;
    int key;
};

RWStructuredBuffer<ParticleEntry> ParticleEntries;
RWStructuredBuffer<int> ParticleIDToEntryIndex; // ParticleEntries[ParticleIDToEntryIndex[i]] should hold the entry for the ith particle (particle id i), like pointers

const uint ParticleCount;

[numthreads(64,1,1)]
void SortPass (uint3 id : SV_DispatchThreadID)
{
    uint i = id.x;
    if(i >= ParticleCount/2) return;

    //
    int thisIndex = 2*i;
    int otherIndex = thisIndex+1;

    ParticleEntry thisEntry = ParticleEntries[thisIndex];
    ParticleEntry otherEntry = ParticleEntries[otherIndex];

    if(thisEntry.key > otherEntry.key) {
        // Swap
        ParticleEntries[thisIndex] = otherEntry;
        ParticleEntries[otherIndex] = thisEntry;

        ParticleIDToEntryIndex[otherEntry.particleIndex] = thisIndex;
        ParticleIDToEntryIndex[thisEntry.particleIndex] = otherIndex;
    }

}
